<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Certitrade Developer</title>
    <link>//developer.certitrade.se/</link>
    <description>Recent content on Certitrade Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="//developer.certitrade.se/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Concepts and Definitions</title>
      <link>//developer.certitrade.se/merchant/reference/concepts/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/concepts/</guid>
      <description>Actors Definitions of the actors that occur in the document:
   Actor Description     Merchant The company that is a customer of CertiTrade   Client The merchant’s software that accesses the server via the API   Shop The merchant’s web shop where the client is installed   Server CertiTrade’s system that processes the client’s requests   Customer The person shopping in the merchant’s shop (the buyer)    REST CertiTrade API applies the principles of REST (REpresentational State Transfer) and has been built using what is known as resource-oriented architecture.</description>
    </item>
    
    <item>
      <title>Web Services</title>
      <link>//developer.certitrade.se/common/webservices/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/common/webservices/</guid>
      <description>This document concerns the web services that exist for CertiTrade Merchant API. Note that the authentication information may differ between the various web services.
Test API URL The test system is used for integration testing and is accessed via the following URL:
https://apitest.certitrade.net/ctpsp/ws/2.0  Callback IP The following outgoing IP is used to send callbacks to merchants: 195.178.165.212
Production API URL The production system is accessed via the following URL:</description>
    </item>
    
    <item>
      <title>Certitrade Basic API Reference</title>
      <link>//developer.certitrade.se/basic/reference/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/basic/reference/</guid>
      <description>Sammanfattning CtBasic är ett POST-baserat API för att göra betalningar i CtPsp.
Parametrar Obligatoriska    Namn Typ Beskrivning     merchantid int Säljföretagets id i CertiTrades system   amount decimal Belopp med . som decimaltecken. 5 kr och 70 öre anges alltså 5.70   currency string Valuta i ISO4219 bokstavskoder, t ex SEK, EUR, USD   orderid num Numeriskt, max 15 siffror.   return_url url URL dit köparen vidarebefordras efter köp   hash string Integritetsskydd och autentisering.</description>
    </item>
    
    <item>
      <title>Merchant</title>
      <link>//developer.certitrade.se/merchant/reference/resources/merchant/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/merchant/</guid>
      <description>Represents a merchant in CertiTrade’s system
URL : /merchant/[id]
Searchable parameters: agent , state, manual_capture
   Variable Attribute Type Description     id A int Resource ID   created A string Date that the merchant was created   state A, U string The merchant’s state. Possible values are “ACTIVE” or “INACTIVE”.   agent A int The agent to which the merchant belongs   company_name C, M, U string Company name.</description>
    </item>
    
    <item>
      <title>Test Information</title>
      <link>//developer.certitrade.se/common/test/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/common/test/</guid>
      <description>This document contains test information for the various payment methods in the CertiTrade Merchant API. These can only be used in the test system and not in a production environment.
Card (CARD / RECURRING / ONE_CLICK) The following card numbers can be used:
 To make a successful authorization without 3-D Secure, use 1234 5678 9000
 To make a successful authorization with a 3-D Secure check, use 4444 3333 2222 0000</description>
    </item>
    
    <item>
      <title>Alternatives</title>
      <link>//developer.certitrade.se/start/alternatives/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/start/alternatives/</guid>
      <description>CertiTrade har två olika API:er för webshops, anpassade för olika system och krav:
 Basic API
 Merchant API
  I tabellen framgår vilken funktionalitet som de erbjuder. Mer information om respektive API finns nedan.
Funktioner och API    Funktion Basic API Merchant API     Kortbetalning ja ja   Swish ja ja   Kortbetalning One-Click nej ja   Kortbetalning Recurring nej ja   Faktura nej ja   Godkänna/avslå betalning manuellt ja   Återbetala manuellt ja   Administativa funktioner manuellt ja    Manuella funktioner tillgängligt via inloggning till Certitrades MCA (Merchant Client Application).</description>
    </item>
    
    <item>
      <title>Agent</title>
      <link>//developer.certitrade.se/merchant/reference/resources/agent/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/agent/</guid>
      <description>Represents an administrator in the system, e.g. a distributor or a CertiTrade administrator.
URL : /agent/[id]
Searchable parameters : parent, state
   Variable Attribute Type Description     id A int Resource ID   created A string Date that the agent was created   state A, U string State variable. Possible values are ACTIVE or INACTIVE.   _links A collection Resource-related links   self A string The resource’s unique URL   _embedded A collection None    </description>
    </item>
    
    <item>
      <title>Payment Attempt</title>
      <link>//developer.certitrade.se/merchant/reference/resources/payment-attempt/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/payment-attempt/</guid>
      <description>Variable Type Description     created string Date and time that the payment attempt was made   result int Whether or not the payment attempt was successful. (0/1)   method string The descriptor’s payment method   computers object Contains data on the payment attempt that is specific to the payment method that was used. The fields that are accessible will depend on which payment method method was specified.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>//developer.certitrade.se/merchant/reference/process/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/process/</guid>
      <description>A payment is usually made via these steps:
 The shop creates a payment resource via the API.
 From the payment representation that is received, the paywin link is retrieved.
 The customer is forwarded using the paywin link, taking them to the payment window at CertiTrade.
 The customer completets the payment and CertiTrade sends a callback to the shop.
 The customer returns to the shop via return_url.</description>
    </item>
    
    <item>
      <title>Descriptor</title>
      <link>//developer.certitrade.se/merchant/reference/resources/descriptor/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/descriptor/</guid>
      <description>URL : /descriptor/[id]
Searchable parameters : merchant, state, method, currencies
   Variable Attribute Type Description     id A int Resource ID   created A string Date that the descriptor was created   state A, U string State variable. Possible values are “ACTIVE” or “INACTIVE”.   merchant C, M int Merchant that owns the descriptor   currencies C, M, U object List of the currencies that the descriptor can use.</description>
    </item>
    
    <item>
      <title>Pseudo Code</title>
      <link>//developer.certitrade.se/merchant/guides/pseudocode/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/guides/pseudocode/</guid>
      <description>Som ett exempel, i form av pseudokod, på hur API:et kan användas visar vi här hur en ny kortbetalning kan skapas.
REQUEST = array[ amount = &amp;quot;1000&amp;quot; currency = &amp;quot;SEK&amp;quot; return_url = &amp;quot;https://theshop.tld/return&amp;quot; callback_url = &amp;quot;https://theshop.tld/callback&amp;quot; reference = &amp;quot;Order: 123456&amp;quot; description = &amp;quot;Krazy glue&amp;quot; language = &amp;quot;sv&amp;quot; ] RESPONSE = create_card_payment(REQUEST) function create_card_payment(REQUEST) REQUEST[method] = &amp;quot;CARD&amp;quot; API_RESOURCE = &amp;quot;payment&amp;quot; REST_VERB = &amp;quot;POST&amp;quot; RESPONSE = call_certitrade(REST_VERB, API_RESOURCE, REQUEST) return RESPONSE function call_certitrade(REST_VERB, API_RESOURCE, REQUEST) // Send the http request to CertiTrade HOST_TEST = https://apitest.</description>
    </item>
    
    <item>
      <title>Payment</title>
      <link>//developer.certitrade.se/merchant/reference/resources/payment/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/payment/</guid>
      <description>URL : /payment/[id]
Searchable parameters : merchant, amount, currency, method, reference, state, language, payment_account
   Variable Attribute Type Description     id A int Resource ID   created A string Date that the payment was created   state A, U string State variable. See table payment – state.   amount C, M, U int Amount in the currency’s smallest unit (e.g. öre for SEK).</description>
    </item>
    
    <item>
      <title>PHP</title>
      <link>//developer.certitrade.se/merchant/guides/php/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/guides/php/</guid>
      <description>Inkludera biblioteket i din kod Kopiera CertiTrade MerchantAPI-biblioteket till en katalog din PHP-applikation kan nå och inkludera det med;
require_once &amp;#39;./CTServer.php&amp;#39;; Skapa en fil MerchantCredentials.php i en katalog som din PHP-applikation kan nå, men som ligger utanför web root och skriv in ditt Merchantid och API-nyckel där.
define(&amp;#39;MERCHANT_ID&amp;#39;, &amp;#34;&amp;lt;your_merchant_id&amp;gt;&amp;#34;); define(&amp;#39;API_KEY&amp;#39;, &amp;#34;&amp;lt;your_api_key&amp;gt;&amp;#34;); Nästa steg är;
Skapa ett CTServer-objekt För att kunna skapa betalningar behövs först en anslutning till CertiTrade. Detta anslutningsobjekt skapas med;</description>
    </item>
    
    <item>
      <title>Examples</title>
      <link>//developer.certitrade.se/merchant/reference/examples/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/examples/</guid>
      <description>Here are some concrete examples of common operations in the API. Certain details, e.g. header fields, may have been omitted, in which case this is shown by “”.
Create card payment To create a payment resource a POST is made to the collection payment.
Request POST payment HTTP/1.1 Authorization: CertiTrade m12345:f3dcba298804 Date: Mon, 12 Nov 2013 14:52:37 GMT Content-Type: application/json { &amp;#34;amount&amp;#34;: &amp;#34;1234&amp;#34;, &amp;#34;currency&amp;#34;: &amp;#34;SEK&amp;#34;, &amp;#34;return_url&amp;#34;: &amp;#34;http://returnurl.com&amp;#34;, &amp;#34;callback_url&amp;#34;: &amp;#34;http://callbackurl.com&amp;#34;, &amp;#34;method&amp;#34;: &amp;#34;CARD&amp;#34;, &amp;#34;reference&amp;#34;: &amp;#34;54321&amp;#34;, &amp;#34;language&amp;#34;: &amp;#34;sv&amp;#34; } Response HTTP/1.</description>
    </item>
    
    <item>
      <title>Tables</title>
      <link>//developer.certitrade.se/merchant/reference/tables/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/tables/</guid>
      <description> Languages    Languages Language code     Swedish sv   English en   Norwegian no   Danish da   Finnish fi   German de   French fr   Italian it   Spanish es    Currencies    Code Num Currency     SEK 752 Swedish krona   EUR 978 Euro   USD 840 US dollar   DKK 208 Danish krone   GBP 826 British pound   NOK 578 Norwegian krone   AUD 036 Australian dollar   CAD 124 Canadian dollar   NZD 554 New Zealand dollar   CHF 756 Swiss franc   TRY 949 Turkish lira   JPY 392 Japanese yen    HTTP status codes    Status code Description     200 Successful GET or PUT request   201 A new resource has been created   204 A resource has been deleted   400 Input data error   401 Not authenticated   403 Not allowed   404 The resource requested cannot be found   500 Internal error    </description>
    </item>
    
    <item>
      <title>Customer</title>
      <link>//developer.certitrade.se/merchant/reference/resources/customer/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/customer/</guid>
      <description>Variable Type Description     security_number string Civil/corporate registration number. Max. 64 characters.   name string Name. Max. 50 characters.   company_name string Company name. Max. 50 characters.   address1 string First address field. Max. 50 characters.   address2 string Second address field. Max. 50 characters.   address3 string Third address field. Max. 50 characters.   zip_code string Zip code.</description>
    </item>
    
    <item>
      <title>.NET</title>
      <link>//developer.certitrade.se/merchant/guides/dotnet/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/guides/dotnet/</guid>
      <description>Inkludera biblioteket i din kod Lägg biblioteket på en lämplig plats och se till att det är tillgängligt från projektet och gör det anropbart från din kod.
using CertiTrade.MerchantAPI Skapa ett CTServer-objekt Skapa sedan ett nytt CTServer-objekt
CTServer ctServer = new CTServer(); ctServer.setCredentials(merchantId, apiKey, testing); Skapa en Payment-resurs och anropa API:et En enkel betalning skapas på detta sätt. CTServer har en metod som heter createCardPayment() som man anropar med ett antal argument.</description>
    </item>
    
    <item>
      <title>References</title>
      <link>//developer.certitrade.se/merchant/reference/references/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/references/</guid>
      <description>REST
http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm
JSON
http://tools.ietf.org/html/rfc4627
HAL
http://tools.ietf.org/html/draft-kelly-json-hal-05
http://stateless.co/hal_specification.html
HTTP status codes
http://www.ietf.org/rfc/rfc2616.txt
API problem
http://tools.ietf.org/html/draft-nottingham-http-problem-02
HMAC
http://www.ietf.org/rfc/rfc2104.txt</description>
    </item>
    
    <item>
      <title>Product</title>
      <link>//developer.certitrade.se/merchant/reference/resources/product/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/product/</guid>
      <description>Variable Type Description     line_ordering int Describes the relative order of the products in the representation, from 1 upward. Products with lower numbers are shown first.   product_reference string Product reference. Max. 50 characters.   product_name string Product name. Max. 50 characters.   price int The product’s price in the same currency as Payment’s currency   quantity int Quantity of products of this type   quantity_unit string Unit of measurement for the product.</description>
    </item>
    
    <item>
      <title>ASP Classic</title>
      <link>//developer.certitrade.se/merchant/guides/asp_classic/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/guides/asp_classic/</guid>
      <description>Vill man använda ASP Classic går det att installera .NET-biblioteket ovan som ett COM+-objekt, på maskinen man vill köra på, och sedan anropa det.
I ASP Classic underlättar det också att använda det externa JSON-bibliotek aspJSON, http://www.aspjson.com, när man ska hantera API-svaret.
Gör biblioteket tillgängligt från din kod Ta den resulterande dll:en från projektet, CertiTrade.dll, och lägg på en lämplig plats. Regitrera den sedan som en COM+-tjänst:
I windowskonsollen kör följande kommandon (regasm och regsvcs hittas i C:\Windows\Microsoft.</description>
    </item>
    
    <item>
      <title>Other Languages</title>
      <link>//developer.certitrade.se/merchant/guides/other/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/guides/other/</guid>
      <description>Om man använder ett språk som det saknas ett klientbibliotek för följer här en generell guide för implementation av CertiTrade:s MerchantAPI.
Förutsättningar För att underlätta implementationen av API:et behövs ett httpklientbibliotek. Det ska stödja skapandet av en REST-begäran och man behöver även själv kunna ändra och sätta headers. Exempel på sådana för ett par vanliga språk är:
 Classic ASP: ServerXMLHTTP
 Java: HttpURLConnection, som är en del av SDK:n eller ett mer komplett externt bibliotek som Jersey eller Apache HttpClient</description>
    </item>
    
    <item>
      <title>Card</title>
      <link>//developer.certitrade.se/merchant/reference/resources/card/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/card/</guid>
      <description>Description – CARD Definition of the values that desc can have
   Value Description     PENDING Starting state   3D_AUTH Authorization with fully authenticated 3-D Secure   3D_ATTEMPT Authorization with 3-D attempt   SSL_AUTH Authorization with card that is not enrolled in 3-D Secure   RECURRING_AUTH Authorization made as a recurring payment for a payment account   MOTO MOTO authorization   3D_FAILED Failed 3-D authentication   AUTH_FAILED Authorization failed   USER_CANCELLED The payment was cancelled   INTERNAL_ERROR Internal error   TIMEOUT Time allowed in the payment system was exceeded   SESSION_INVALID Payment session was cancelled due to abnormal behavior   ACCOUNT_TERMINATED The authorization failed and the payment_account associated with the payment has been SUSPENDED.</description>
    </item>
    
    <item>
      <title>PayEx</title>
      <link>//developer.certitrade.se/merchant/reference/resources/payex/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/payex/</guid>
      <description>DIRECT_PAYEX Bank List of allowed banks and the currency that PayEx support for direct payments.
   Identifier Permitted currency Description     FSPA SEK Swedbank   NB SEK Nordea Bank   SEB SEK Skandinaviska Enskilda Bank   SHB SEK Handelsbanken   NB:DK DKK Nordea Bank DK   DDB DKK Den Danske Bank   BAX NOK BankAxess   SAMPO EUR    AKTIA EUR    SP EUR    POP EUR    OP EUR    NB:FI EUR Nordea Bank FI   SHB:FI EUR Handelsbanken FI   SPANKKI EUR    TAPIOLA EUR    AALAND EUR Ålandsbanken    Description Definition of the values that desc can have</description>
    </item>
    
    <item>
      <title>Swish</title>
      <link>//developer.certitrade.se/merchant/reference/resources/swish/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/swish/</guid>
      <description>Description – SWISH_E / SWISH_M    Value Description     CREATED The payment has been created at Certitrade.   PAYMENT_REQUEST_SENT Payment request to Swish has been sent.   WAITING_FOR_SWISH_RESULT Payment request to Swish has been answered and certitrade waits for callback from Swish.   PAID The callback arrived and the payment is paid.   CANCELLED_BY_USER The user chose to cancel the payment in swish app.</description>
    </item>
    
    <item>
      <title>Payment Account</title>
      <link>//developer.certitrade.se/merchant/reference/resources/payment-account/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/payment-account/</guid>
      <description>Account used for RECURRING and ONE_CLICK payments.
URL : /payment_account/[id]
Searchable parameters : merchant, state, type
   Variable Attribute Type Description     id A int Resource ID   created A string Date that the account was created.   state A, U string State variable. See table payment_account – state.   merchant A int Merchant that owns the account.   payment C, M, A int The payment used to initialize the account.</description>
    </item>
    
    <item>
      <title>Refund</title>
      <link>//developer.certitrade.se/merchant/reference/resources/refund/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/refund/</guid>
      <description>refund Refunds of a payment
URL : /payment/[paymentId]/refund/[id]
Searchable parameters : &amp;ndash;
   Variable Attribute Type Description     id A int Resource ID   created A string Date that the refund was created   state A, U string State variable, see table refund – state   amount C, M, U int Refund amount in the payment currency’s smallest unit (e.g. öre for SEK).</description>
    </item>
    
    <item>
      <title>Acquirer Agreement</title>
      <link>//developer.certitrade.se/merchant/reference/resources/acquirer-agreement/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/merchant/reference/resources/acquirer-agreement/</guid>
      <description>acquirer_agreement Represents an acquirer agreement for card payments. Needs to be linked to a Descriptor before card payments can be made.
URL : /acquirer_agreement/[id]
Searchable parameters : merchant, state, agent
   Variable Type Description     contract_id (id) C, M int   created A string   state A, U string   merchant C, M int   contract_type C, M string   acquirer C, M string   processor C, M string   3d A, U object   3d.</description>
    </item>
    
    <item>
      <title>PHP Basic API Guide</title>
      <link>//developer.certitrade.se/basic/guides/php/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>//developer.certitrade.se/basic/guides/php/</guid>
      <description>A complete example on how to use the Basic API in PHP is available on Github.
To get started:
 Download and unpack the files.
 Copy the ctpsp2-basic-example folder to the web root or another public folder on your server.
 Open shop.php from a web browser. Typically this is accomplished by appending /ctpsp2-basic-example/example/shop.php to the webshops address.
  As soon as the package is placed in a webb folder a test purchase can be performed without any additional programming.</description>
    </item>
    
  </channel>
</rss>